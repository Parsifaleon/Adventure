 var example = document.getElementById("example"),
			    ctx     = example.getContext('2d');
			    ctx.fillStyle = '#262A43';
	        	ctx.fillRect(64, 64, 640, 640);
	        	const titleScore = document.querySelector('#score');
	        	const btnRestart = document.querySelector('#restart');
	        	const modalBlock = document.querySelector('#modal');
	        	const titleLevel = document.querySelector('#level');

	        	//Level
	        	let lvl = +localStorage.getItem('test') || 1;
	        	localStorage.setItem('test', lvl);
	        	let score = +localStorage.getItem('test2') || 0;
	        	let maxLevel = 3;
	        	let btime = 700;

	        	//Colors
  				let clr1 = '#262A43',
				    clr2 = '#AF262F',
				    clr3 = '#454C7A';
				    clr4 = '#000';

		let arrMoney = [
			5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
			5, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 5,
			4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			5, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 5,
			5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
		];


		let arrStone = [
			1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 1, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 1, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
			3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
			1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 2, 2, 2, 2, 2, 2, 1, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 1, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
			3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
			3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
			1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			2, 2, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 1, 1, 2, 2, 2, 2, 2, 1, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2,
			3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
			3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
		];

		
			//Field size(размер поля)
            example.width  = 768;
            example.height = 768;
            //Screee frame(рамка экрана)
	        for (let i = 0; i < 48; i += 2) {
	          	ctx.strokeRect(i, i, (768 - (2 * i)), (768 - (2 *i)));
	        };
	        ctx.fillStyle = clr1;
	        ctx.fillRect(64, 64, 640, 640);

	        ctx.fillRect(0, 0, 64, 64);
	        ctx.fillRect(0, 704, 64, 64);
	        ctx.fillRect(704, 0, 64, 64);
	        ctx.fillRect(704, 704, 64, 64);


	        //Level arrays(массивы уровней)
	        let arr;
	        
	        	let arr1 = [
					1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
					1, 0, 0, 1, 2, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 1, 0, 1, 0, 1,
					1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
					1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1,
					1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,
					1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1,
					1, 0, 1, 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
					1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1,
					1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1,
					1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,
					1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1,
					1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 2, 1, 0, 1, 0, 1,
					1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,
					1, 1, 1, 1, 0, 1, 3, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1,
					1, 2, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1,
					1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1,
					1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
					1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 4,
					1, 0, 0, 0, 0, 1, 0, 1, 2, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1,
					1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
				];

				let arr2 = [
					1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
					4, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1,
					1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1,
					1, 0, 2, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,
					1, 0, 1, 1, 0, 1, 3, 0, 1, 0, 1, 0, 2, 1, 0, 0, 0, 0, 0, 1,
					1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
					1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1,
					1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1,
					1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1,
					1, 1, 3, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1,
					1, 0, 0, 0, 1, 0, 1, 0, 1, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1,
					1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
					1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,
					1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1,
					1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1,
					1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1,
					1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1,
					1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1,
					1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1,
					1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
				];

				let arr3 = [
					1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
					1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 1,
					1, 0, 0, 1, 1, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1,
					1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1,
					1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1,
					1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 2, 1,
					1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
					1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
					1, 0, 1, 0, 0, 1, 1, 3, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1,
					1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1,
					1, 0, 1, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,
					1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 3, 0, 1, 1, 1, 0, 0, 1, 0, 1,
					1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1,
					1, 1, 1, 1, 0, 1, 0, 1, 2, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1,
					1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1,
					1, 0, 0, 1, 0, 3, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,
					1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1,
					1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1,
					1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,
					1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1,
				];


//Main function
////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////             ////      //////     ////               ///////////////////////////////////////////////
///////             ////      //////     ////               ////////////////////////////////////////////////
//////    /////////////      //////     ////     //////    /////////////////////////////////////////////////
/////              ///      //////     ////     //////    //////////////////////////////////////////////////
////              ///      //////     ////               ///////////////////////////////////////////////////
/////////////    ///      //////     ////               ////////////////////////////////////////////////////
///             ///                 ////     ///////////////////////////////////////////////////////////////
//             ///                 ////     ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////


	        function game(lvl) {
	    		titleScore.innerHTML = `Score: ${+score}`;
	    		titleLevel.innerHTML = `Level: ${+lvl}`;

	        	let arrB = [],
	        		arrNewB = [];

				if (lvl == 1) {
	        		arr = arr1;
	        	} else if (lvl == 2) {
	        		arr = arr2;
	        	} else if (lvl == 3) {
	        		arr = arr3;
	        	} else if (lvl > 3) {
	        		localStorage.setItem('test', 1);
	        		arr = arr1;
	        	};

				//Block generation(генерация блоков)
				let numx = 0;
				let numy = 0;
				for (let i = 0; i < 400; i++) {
					if (i % 20 == 0) {
						numy++;
						numx = 0;
					};
						if (arr[i] == 1) {
							let numSx = 0;
							let numSy = 0;
							for (let l = 0; l < 1024; l++) {
								if (l % 32 == 0) {
									numSy++;
									numSx = 0;
								};
									if (arrStone[l] == 1) {
										ctx.fillStyle = '#6689A8';
										ctx.fillRect((64 + (numx * 32) + numSx), (32 + (numy * 32) + numSy), 1, 1);
									} else if (arrStone[l] == 2) {
										ctx.fillStyle = '#53668E';
										ctx.fillRect((64 + (numx * 32) + numSx), (32 + (numy * 32) + numSy), 1, 1);
									} else if (arrStone[l] == 3) {
										ctx.fillStyle = '#344474';
										ctx.fillRect((64 + (numx * 32) + numSx), (32 + (numy * 32) + numSy), 1, 1);
									};
									numSx++;
							};
						} else if (arr[i] == 0) {
							ctx.fillStyle = clr1;
							ctx.fillRect((64 + (numx * 32)), (32 + (numy * 32)), 32, 32);
						} else if (arr[i] == 2) {
							let numMx = 0;
							let numMy = 0;
							for (let l = 0; l < 1024; l++) {
								if (l % 32 == 0) {
									numMy++;
									numMx = 0;
								};
									if (arrMoney[l] == 1) {
										ctx.fillStyle = '#FFB020';
										ctx.fillRect((64 + (numx * 32) + numMx), (32 + (numy * 32) + numMy), 1, 1);
									} else if (arrMoney[l] == 0) {
										ctx.fillStyle = '#FFE954';
										ctx.fillRect((64 + (numx * 32) + numMx), (32 + (numy * 32) + numMy), 1, 1);
									} else if (arrMoney[l] == 2) {
										ctx.fillStyle = '#F2773D';
										ctx.fillRect((64 + (numx * 32) + numMx), (32 + (numy * 32) + numMy), 1, 1);
									} else if (arrMoney[l] == 3) {
										ctx.fillStyle = '#000';
										ctx.fillRect((64 + (numx * 32) + numMx), (32 + (numy * 32) + numMy), 1, 1);
									} else if (arrMoney[l] == 4) {
										ctx.fillStyle = '#DB492A';
										ctx.fillRect((64 + (numx * 32) + numMx), (32 + (numy * 32) + numMy), 1, 1);
									} else if (arrMoney[l] == 5) {
										ctx.fillStyle = '#262A43';
										ctx.fillRect((64 + (numx * 32) + numMx), (32 + (numy * 32) + numMy), 1, 1);
									};
									numMx++;
							};
						} else if (arr[i] == 3) {
							ctx.fillStyle = clr4;
							ctx.fillRect((64 + (numx * 32)), (32 + (numy * 32)), 32, 32);
							arrB.push(64 + (numx * 32));
							arrB.push(32 + (numy * 32));
							arrNewB.push(i);
						} else if (arr[i] == 4) {
							ctx.fillStyle = clr3;
							ctx.fillRect((64 + (numx * 32)), (32 + (numy * 32)), 32, 32);
						};
						numx++;
				};

				//Player
				let pos1;
		        let pos2;
		        let num1 = 0;
		        let num2 = 0;
		        //Player position
		        let arrId;
				for (let i = 0; i < arr.length; i++) {
					if (i % 20 == 0) {
						num2++;
						num1 = 0;
					};
					if (arr[i] == 0) {
						pos1 = (64 + (num1 * 32));
						pos2 = (32 + (num2 * 32));
						arrId = i;
						break;
					};
					num1++;
				}
				ctx.fillStyle = clr2;
	          	ctx.fillRect(pos1, pos2, 32, 32);

	          	//Move functions
					function goRight() {
						ctx.fillStyle = clr1;
			            ctx.fillRect(pos1, pos2, 32, 32);
			            pos1 += 32;
			            if (pos1 > 672) {
			              	pos1 = 64;
			            };
			            ctx.fillStyle = clr2;
			            ctx.fillRect(pos1, pos2, 32, 32);
					};
					function goLeft() {
						ctx.fillStyle = clr1;
			            ctx.fillRect(pos1, pos2, 32, 32);
			            pos1 -= 32;
			            if (pos1 < 64) {
			              	pos1 = 672;
			            };
			            ctx.fillStyle = clr2;
			            ctx.fillRect(pos1, pos2, 32, 32);
					};
					function goUp() {
						ctx.fillStyle = clr1;
			            ctx.fillRect(pos1, pos2, 32, 32);
			            pos2 -= 32;
			            if (pos2 < 64) {
			              	pos2 = 672;
			            };
			            ctx.fillStyle = clr2;
			            ctx.fillRect(pos1, pos2, 32, 32);
					};
					function goDown() {
						ctx.fillStyle = clr1;
			            ctx.fillRect(pos1, pos2, 32, 32);
			            pos2 += 32;
			            if (pos2 > 672) {
			              	pos2 = 64;
			            };
			            ctx.fillStyle = clr2;
			            ctx.fillRect(pos1, pos2, 32, 32);
					};
					function nextLvl() {
						lvl++;
			            if (lvl > maxLevel) {
				            lvl = 1;
				            score = 0;
				            localStorage.setItem('test', lvl);
				            localStorage.setItem('test2', score);
				            location.reload();
			            };
				        localStorage.setItem('test', lvl);
				        localStorage.setItem('test2', score);
				        location.reload();
					};
					//Function "Game Over"
					function gameOver() {
						modalBlock.style.display = 'flex';
			              	btnRestart.addEventListener('click', () => {
			                 	location.reload();
			              	});
					};

		        //Control(управление)
				document.addEventListener('keydown', function(event) {
		  			if (event.code == 'ArrowRight') {
		  				if ((arr[arrId + 1] == 0) && ((arrId + 1) % 20 !== 0)) {
							goRight();
			              	arrId++;
		  				} else if (((arrId + 1) % 20 == 0) && (arr[arrId - 19] == 0)) {
		  					goRight();
			              	arrId = arrId - 19;
		  				} else if (arr[arrId + 1] == 2) {
		  					goRight();
			              	arrId++;
			              	score = score + 100;
			              	arr[arrId] = 0;
			              	titleScore.innerHTML = `Score: ${+score}`;
		  				} else if (arr[arrId + 1] == 3) {
		  					goRight();
			              	gameOver();
			              arrId++;
		  				} else if (arr[arrId] == 3) {
		  					gameOver();
		  				} else if (arr[arrId + 1] == 4) {
		  					goRight();
			              	arrId++;
			              	nextLvl();
		  				};
			        } else if (event.code == 'ArrowLeft') {
			          	if ((arrId == 0) && (arr[arrId + 19] == 0)) {
			          		goLeft();
			              	arrId = 19;
			          	} else if ((arrId % 20 == 0) && (arr[arrId + 19] == 0)) {
			          		goLeft();
			              	arrId = arrId + 19;
			          	} else if ((arr[arrId - 1] == 0) && (arrId % 20 !== 0)) {
			          		goLeft();
			              	arrId = arrId - 1;
			              	if (arrId < 0) {
			              		arrId = 19;
			              	};
			          	} else if (arr[arrId - 1] == 2) {
		  					goLeft();
			              	arrId = arrId - 1;
			              	score = score + 100;
			              	arr[arrId] = 0;
			              	titleScore.innerHTML = `Score: ${+score}`;
		  				} else if (arr[arrId - 1] == 3) {
		  					goLeft();
			              	gameOver();
			              	arrId = arrId - 1;
		  				} else if (arr[arrId] == 3) {
		  					gameOver();
		  				} else if (arr[arrId - 1] == 4) {
		  					goLeft();
			              	arrId = arrId - 1;
			              	nextLvl();
			            };
			        } else if (event.code == 'ArrowUp') {
			          	if ((arrId <= 19) && (arr[arrId + 380] == 0)) {
			          		goUp();
			               arrId = arrId + 380;
			          	} else if (arr[arrId - 20] == 0) {
			          		goUp();
			              	arrId = arrId - 20;
			          	} else if (arr[arrId - 20] == 2) {
		  					goUp();
			              	arrId = arrId - 20;
			                score = score + 100;
			              	arr[arrId] = 0;
			              	titleScore.innerHTML = `Score: ${+score}`;
		  				} else if (arr[arrId - 20] == 3) {
		  					goUp();
			              	gameOver();
			              	arrId = arrId - 20;
		  				} else if (arr[arrId] == 3) {
		  					gameOver();
		  				} else if (arr[arrId - 20] == 4) {
		  					goUp();
			              	arrId = arrId - 20;
			              	nextLvl();
		  				};
			        } else if (event.code == 'ArrowDown') {
			          	if ((arrId >= 380) && (arr[arrId - 380] == 0)) {
			          		goDown();
			              	arrId = arrId - 380;
			          	} else if (arr[arrId + 20] == 0) {
			          		goDown();
			                arrId = arrId + 20;
			          	} else if (arr[arrId + 20] == 2) {
			          		goDown();
			                arrId = arrId + 20;
			               	score = score + 100;
			              	arr[arrId] = 0;
			              	titleScore.innerHTML = `Score: ${+score}`;
			          	} else if (arr[arrId + 20] == 3) {
		  					goDown();
			              	gameOver();
			                arrId = arrId + 20;
		  				} else if (arr[arrId] == 3) {
		  					gameOver();
		  				} else if (arr[arrId + 20] == 4) {
		  					goDown();
			                arrId = arrId + 20;
			                nextLvl();
		  				}
			        }
				});


				//Animation of B-blocks
					function goB(x, y, n) {
						let numBx = x;
						let numBy = y;
					 setInterval(function bm2() {
						if ((numBx == x) && (numBy == (y + 32))) {
							ctx.fillStyle = clr1;
							ctx.fillRect(numBx, numBy, 32, 32); 
							numBy = numBy - 32;
							ctx.fillStyle = clr4;
							ctx.fillRect(numBx, numBy, 32, 32);
							arr[arrNewB[n] + 20] = 0;
							arr[arrNewB[n]] = 3;
							if (arrNewB[n] == arrId) {
								gameOver();		         
						    };
						} else if ((numBx == (x + 32)) && (numBy == (y + 32))) {
							ctx.fillStyle = clr1;
							ctx.fillRect(numBx, numBy, 32, 32); 
							numBx = numBx - 32;
							ctx.fillStyle = clr4;
							ctx.fillRect(numBx, numBy, 32, 32);
							arr[arrNewB[n] + 21] = 0;
							arr[arrNewB[n] + 20] = 3;
							if (arrNewB[n] + 20 == arrId) {
								gameOver();
							};
						} else if ((numBx == (x + 32)) && (numBy == y)) {
							ctx.fillStyle = clr1;
							ctx.fillRect(numBx, numBy, 32, 32); 
							numBy = numBy + 32;
							ctx.fillStyle = clr4;
							ctx.fillRect(numBx, numBy, 32, 32);
							arr[arrNewB[n] + 1] = 0;
							arr[arrNewB[n] + 21] = 3;
							if (arrNewB[n] + 21 == arrId) {
								gameOver();
							}
						} else if ((numBx == x) && (numBy == y)){
							ctx.fillStyle = clr1;
							ctx.fillRect(numBx, numBy, 32, 32); 
							numBx = numBx + 32;
							ctx.fillStyle = clr4;
							ctx.fillRect(numBx, numBy, 32, 32);
							arr[arrNewB[n]] = 0;
							arr[arrNewB[n] + 1] = 3;
							if (arrNewB[n] + 1 == arrId) {
								gameOver();
							};
						};
					 }, btime);
					};

					goB(arrB[0], arrB[1], 0);
					goB(arrB[2], arrB[3], 1);
					goB(arrB[4], arrB[5], 2);
					goB(arrB[6], arrB[7], 3);
				};
			   	game(lvl);